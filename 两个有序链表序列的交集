#include <stdio.h>

#include<stdlib.h>

typedef struct Node* List;
struct Node {
	int data;
	struct Node *Next;
};
void combine(List l1, List l2, List l3);
List tjd();
void read(List l);
void print(List l);
int main() {
	List l1, l2, l3;
	l1 = tjd();
	l2 = tjd();
	l3 = tjd();
	read(l1);
	read(l2);
	combine(l1, l2, l3);
	print(l3);
	return 0;
}

List tjd() {
	List l;
	l = (List)malloc(sizeof(struct Node));
	l->Next = NULL;
	return l;
}

void read(List l) {
	int num;
	List p;
	scanf("%d", &num);
	while (num > 0) {
		p = (List)malloc(sizeof(struct Node));
		p->data = num;
		p->Next = NULL;
		l->Next = p;
		l = p;
		scanf("%d", &num);
	}
	return;
}

void combine(List l1, List l2, List l3) {
	l1 = l1->Next;
	l2 = l2->Next;
	while (l1&&l2)
	{
		while (l1->data < l2->data&&l1&&l2) {
			l1 = l1->Next;
			if (l1 == NULL) {
				break;
			}
		}
		if (l1 == NULL) {
			break;
		}
		if (l1->data == l2->data) {
			l3->Next = l1;
			l1 = l1->Next;
			l3 = l3->Next;
		}
		if (l1 == NULL) {
			break;
		}
		while (l2->data < l1->data&&l1&&l2) {
			l2 = l2->Next;
			if (l2 == NULL) {
				break;
			}
		}
		if (l2 == NULL) {
			break;
		}
	}
	return;
}

void print(List l)
{
	l = l->Next;
	if (l == NULL)
	{
		printf("NULL");
		return;
	}
	while (l)
	{
		if (l->Next == NULL)
			printf("%d", l->data);
		else printf("%d ", l->data);
		l = l->Next;
	}

}
